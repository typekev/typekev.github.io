{"version":3,"sources":["templates/Content/index.js","components/Title/index.js","components/List/index.js","utils/checkValidity.js","utils/throwError.js","utils/checkStatus.js","utils/parseJSON.js","utils/request.js","routes/Blog/api/index.js","hooks/useBlog.js","routes/Blog/PostContent.js","routes/Blog/index.js"],"names":["Content","styled","Container","align","css","StyledButton","Button","theme","palette","background","primary","dark","default","withTheme","rest","disabled","variant","size","List","ul","checkValidity","status","throwError","response","error","Error","statusText","checkStatus","parseJSON","json","logError","console","request","fetch","then","getBlogPosts","method","catch","getBlogPost","location","initialState","getPosts","setPosts","a","useBlog","initialPost","useState","posts","post","setPost","useEffect","getSinglePost","PostContent","compare","b","timestamp","sortPosts","sort","getDelay","index","renderPosts","setPostId","map","title","published","delay","key","Transition","in","component","Fade","timeout","ButtonGroup","color","Hidden","xsDown","onClick","keyPressDelayRange","type","doType","Blog","history","postId","match","params","content","getPost","id","push","clearPostId","titleEl","Title","sentenceDelayPerCharRange","Grow","fixed","Typography","smDown","Zoom","disableElevation","mdUp","maxWidth","source","renderers","paragraph","link","A","visible","useMemo","Object","values","defaultProps","undefined"],"mappings":"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","file":"static/js/6.e7b10857.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport Container from '@material-ui/core/Container';\n\nconst Content = styled(Container)`\n  margin-top: 3rem;\n  margin-bottom: 6rem;\n  pointer-events: none;\n\n  ${({ align }) =>\n    align === 'center' &&\n    css`\n      align-self: center;\n      margin-top: calc(-25vmin - 2rem);\n    `}\n`;\n\nexport default Content;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { withTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst StyledButton = styled(Button)`\n  ${({\n    theme: {\n      palette: { background, primary },\n    },\n  }) => css`\n    background-color: ${primary.dark} !important;\n    border-color: ${primary.dark} !important;\n    color: ${background.default} !important;\n  `}\n\n  text-align: left;\n  display: flow-root !important;\n  text-transform: initial !important;\n`;\n\nfunction Title({ ...rest }) {\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return (\n    <StyledButton\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n      disabled\n      variant=\"outlined\"\n      size=\"large\"\n    />\n  );\n}\n\nexport default withTheme(Title);\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style-type: none;\n\n  & li {\n    margin-bottom: 1.25rem;\n    & span {\n      text-align: left !important;\n    }\n  }\n`;\n\nexport default List;\n","const checkValidity = status => status >= 200 && status < 300;\n\nexport default checkValidity;\n","const throwError = response => {\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n};\n\nexport default throwError;\n","import checkValidity from 'utils/checkValidity';\nimport throwError from 'utils/throwError';\n\nconst checkStatus = response => (checkValidity(response.status) ? response : throwError(response));\n\nexport default checkStatus;\n","const parseJSON = response => response.json();\n\nexport default parseJSON;\n","import checkStatus from 'utils/checkStatus';\nimport parseJSON from 'utils/parseJSON';\n\nexport const logError = error => console.error('request failed', error);\n\nconst request = (...args) =>\n  fetch(...args)\n    .then(checkStatus)\n    .then(parseJSON);\n\nexport default request;\n","import request, { logError } from 'utils/request';\n\nexport const getBlogPosts = () =>\n  request('https://typekev.github.io/typekev-blog/posts/json/', {\n    method: 'GET',\n  }).catch(logError);\n\nexport const getBlogPost = location =>\n  request(`https://typekev.github.io/typekev-blog/posts/json/${location}`, {\n    method: 'GET',\n  }).catch(logError);\n\nexport default { getBlogPosts, getBlogPost };\n","import { useState, useEffect } from 'react';\nimport { getBlogPosts, getBlogPost } from 'routes/Blog/api';\n\nexport const initialState = {};\n\nexport const getPosts = async setPosts => setPosts((await getBlogPosts()) || initialState);\n\nexport const getSinglePost = setPost => async location =>\n  setPost((location && (await getBlogPost(location))) || initialState);\n\nexport default function useBlog(initialPost) {\n  const [posts, setPosts] = useState(initialState);\n  const [post, setPost] = useState(initialPost || initialState);\n\n  useEffect(() => {\n    getPosts(setPosts);\n  }, []);\n\n  const getPost = getSinglePost(setPost);\n\n  return [posts, post, getPost];\n}\n","import styled from 'styled-components';\nimport Container from '@material-ui/core/Container';\n\nconst PostContent = styled(Container)`\n  margin-left: 0 !important;\n\n  & > span > * {\n    margin-bottom: 1rem;\n  }\n\n  h1 {\n    display: none;\n  }\n\n  img {\n    margin: -0.5em;\n    max-width: 100%;\n  }\n`;\n\nexport default PostContent;\n","import React, { useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown';\nimport Grow from '@material-ui/core/Grow';\nimport Fade from '@material-ui/core/Fade';\nimport Zoom from '@material-ui/core/Zoom';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Hidden from '@material-ui/core/Hidden';\nimport Keyboard, { Cursor } from 'react-mk';\nimport useBlog from 'hooks/useBlog';\nimport Content from 'templates/Content';\nimport Transition from 'components/Transition';\nimport Title from 'components/Title';\nimport A from 'components/A';\nimport List from 'components/List';\nimport PostContent from './PostContent';\n\nexport const compare = (a, b) => (a.timestamp > b.timestamp ? -1 : 1);\n\nexport const sortPosts = posts => posts.sort(compare);\n\nexport const getDelay = index => index * 250;\n\nconst doType = ({ delay, title }) => ({ type }) => type(delay, title);\n\nexport const renderPosts = (posts, setPostId) => () =>\n  posts.map(({ title, published, location }, index) => {\n    const delay = getDelay(index);\n\n    return (\n      <li key={title}>\n        <Transition in component={Fade} delay={delay} timeout={1250}>\n          <ButtonGroup variant=\"outlined\" color=\"inherit\">\n            <Hidden xsDown>\n              <Button disabled variant=\"contained\">\n                {published}\n              </Button>\n            </Hidden>\n            <Button onClick={() => setPostId(location)}>\n              <Keyboard keyPressDelayRange={[30, 50]}>{doType({ delay, title })}</Keyboard>\n            </Button>\n          </ButtonGroup>\n        </Transition>\n      </li>\n    );\n  });\n\nexport default function Blog({\n  history,\n  match: {\n    params: { postId },\n  },\n  initialPost,\n}) {\n  const [posts, { title, content }, getPost] = useBlog(initialPost);\n\n  const setPostId = id => history.push(`/blog/${id}`);\n  const clearPostId = () => setPostId('');\n\n  useEffect(() => {\n    getPost(postId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [postId]);\n\n  const titleEl = (\n    <Title>\n      {postId && title ? (\n        <Keyboard key={postId} sentenceDelayPerCharRange={[0, 0]} keyPressDelayRange={[60, 80]}>\n          {title}\n        </Keyboard>\n      ) : (\n        <Keyboard sentenceDelayPerCharRange={[0, 0]}>I am a thinker</Keyboard>\n      )}\n      <Cursor />\n    </Title>\n  );\n\n  return (\n    <Transition in component={Grow}>\n      <Content fixed>\n        <Typography variant=\"h5\">\n          <Hidden smDown>\n            <ButtonGroup variant=\"outlined\">\n              {!!title && (\n                <Transition in={!!title} component={Zoom}>\n                  <Button\n                    disableElevation\n                    color=\"secondary\"\n                    size=\"large\"\n                    variant=\"contained\"\n                    onClick={clearPostId}\n                  >\n                    Go back\n                  </Button>\n                </Transition>\n              )}\n              {titleEl}\n            </ButtonGroup>\n          </Hidden>\n          <Hidden mdUp>\n            <ButtonGroup variant=\"outlined\">{titleEl}</ButtonGroup>\n          </Hidden>\n        </Typography>\n        <br />\n        <Transition in={!!content} component={Fade} timeout={1000} delay={100}>\n          <PostContent fixed maxWidth=\"md\">\n            <Typography component=\"span\">\n              <ReactMarkdown source={content} renderers={{ paragraph: Typography, link: A }} />\n            </Typography>\n            {!!content && (\n              <>\n                <br />\n                <br />\n                <Button color=\"secondary\" variant=\"contained\" onClick={clearPostId}>\n                  View all posts\n                </Button>\n              </>\n            )}\n          </PostContent>\n        </Transition>\n        <br />\n        <Transition in={!content} component={Fade} timeout={content ? 0 : 200}>\n          <List visible={!content}>\n            {useMemo(renderPosts(sortPosts(Object.values(posts)), setPostId), [posts])}\n          </List>\n        </Transition>\n      </Content>\n    </Transition>\n  );\n}\n\nBlog.propTypes = {\n  history: PropTypes.shape({ push: PropTypes.func.isRequired }).isRequired,\n  match: PropTypes.shape({ params: PropTypes.shape({ postId: PropTypes.string }).isRequired })\n    .isRequired,\n  initialPost: PropTypes.shape({}),\n};\n\nBlog.defaultProps = {\n  initialPost: undefined,\n};\n"],"sourceRoot":""}